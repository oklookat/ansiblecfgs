---
- import_playbook: ../install-sing-box/playbook.yml
- name: "ansiblecfgs: reality-sing-box"
  hosts: all
  become: true
  tasks:
    - name: Generate shortID
      ansible.builtin.command: sing-box generate rand --hex 8
      register: singbox_short_id

    - name: Notify shortID
      ansible.builtin.debug:
        msg: "ATTENTION! Your sing-box shortID is: {{ singbox_short_id.stdout }}. It needed for client."

    - name: Generate sing-box UUID
      ansible.builtin.command: sing-box generate uuid
      register: singbox_uuid

    - name: Notify UUID
      ansible.builtin.debug:
        msg: "ATTENTION! Your sing-box UUID is: {{ singbox_uuid.stdout }}. It needed for client."

    - name: Generate sing-box reality key pair
      ansible.builtin.command: sing-box generate reality-keypair
      register: singbox_keys

    - name: Extract sing-box reality keys
      ansible.builtin.set_fact:
        singbox_private_key_e: "{{ singbox_keys.stdout.split('PrivateKey: ')[1].split()[0] }}"
        singbox_public_key_e: "{{ singbox_keys.stdout.split('PublicKey: ')[1].split()[0] }}"

    - name: Notify public key
      ansible.builtin.debug:
        msg: "ATTENTION! Your reality public key is: {{ singbox_public_key_e }}. It needed for client."

    - name: Generate sing-box config
      ansible.builtin.template:
        src: sing-box.json.j2
        dest: /etc/sing-box/config.json
      vars:
        singbox_private_key: "{{ singbox_private_key_e }}"
      notify: Restart sing-box

    - name: Enable and start sing-box
      ansible.builtin.systemd:
        name: sing-box
        enabled: true
        state: started
  handlers:
    - name: Restart sing-box
      ansible.builtin.systemd:
        name: sing-box
        state: restarted